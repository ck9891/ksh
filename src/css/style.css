/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/base.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/base";
 */
@tailwind base;

/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */


.first-letter::first-letter {
    font-weight:bold;
    color:#2b6cb0;
    font-size: 1.5em;
}
/* The actual timeline (the vertical ruler) */
.timeline {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
}

/* The actual timeline (the vertical ruler) */
.timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: #bee3f8;
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
}

/* Container around content */
.container {
    padding: 10px 40px;
    position: relative;
    background-color: inherit;
    width: 50%;
}

/* The circles on the timeline */
.container::after {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -17px;
    background-color: #4299e1;
    border: 4px solid #bee3f8;
    color: #fff;
    top: 15px;
    border-radius: 50%;
    z-index: 1;
}

/* Place the container to the left */
.left {
    left: -0.5%;
}

/* Place the container to the right */
.right {
    left: 50.5%;
}

/* Add arrows to the left container (pointing right) */
.left::before {
    content: " ";
    height: 0;
    position: absolute;
    top: 22px;
    width: 0;
    z-index: 1;
    right: 30px;
    border: medium solid #bee3f8;
    border-width: 10px 0 10px 10px;
    border-color: transparent transparent transparent #bee3f8;
}

/* Add arrows to the right container (pointing left) */
.right::before {
    content: " ";
    height: 0;
    position: absolute;
    top: 22px;
    width: 0;
    z-index: 1;
    left: 30px;
    border: medium solid #bee3f8;
    border-width: 10px 10px 10px 0;
    border-color: transparent #bee3f8 transparent transparent;
}

/* Fix the circle for containers on the right side */
.right::after {
    left: -16px;
}

/* The actual content */
.content {
    padding: 20px 30px;
    background-color: #bee3f8;
    color: #333;
    position: relative;
    border-radius: 6px;
    box-shadow: 1px 2px 8px -2px #ccc;
}

/* Media queries - Responsive timeline on screens less than 600px wide */
@media screen and (max-width: 600px) {

    /* Place the timelime to the left */
    .timeline::after {
        left: 31px;
    }

    /* Full-width containers */
    .container {
        width: 100%;
        padding-left: 70px;
        padding-right: 25px;
    }

    /* Make sure that all arrows are pointing leftwards */
    .container::before {
        left: 60px;
        border: medium solid #bee3f8;
        border-width: 10px 10px 10px 0;
        border-color: transparent #bee3f8 transparent transparent;
    }

    /* Make sure all circles are at the same spot */
    .left::after,
    .right::after {
        left: 15px;
    }

    /* Make all right containers behave like the left ones */
    .right {
        left: 0%;
    }
    label {
        flex-direction: column;
        align-items: flex-start;
    }
    .hero-banner-content {
      position: relative !important;
      top: 0 !important;left:0!important;
      transform: none !important;
    }

    .hero-banner-content h2 {
      margin: 0 !important;
    }
}

.job-card {
    width: 22rem;
    padding: 1rem;
}

input {
    border: 1px solid #eee;
    padding: 7.5px 7.5px;
    /* margin: 0 .5rem; */
    font-size: 1.1em;
}
label {
    /* margin: 1rem; */
    font-size: 1.1em;
    align-self: center;
        justify-content: space-between;
}

#applyForm {
    background-color: #bee3f8;
}

.hero-banner >* {
  opacity: .7;
}

.hero-banner-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.fresh-form {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.fresh-input {
  background-color: white !important;
    border-radius: 6px !important;
    width: 100%;
    font-size: 1.15em !important;
}

.addressLine1, .addressLine2, .positionAppliedFor {
  width: 100%;
}
.mM, .dD, .yYYY {
  width:100px;
}
.fresh-form p {
  width:100%;
}

.city, .province, .postalCode {
  margin-left: 1rem;
  margin-right: 1rem;
  width:33%;
}


